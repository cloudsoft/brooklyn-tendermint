# Copyright 2016 by Cloudsoft Corporation Limited
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

brooklyn.catalog:
  id: brooklyn-tendermint
  version: "0.1-20160426.2314"

  items:
  - id: tendermint-mintnet
    name: "Tendermint MintNet"
    description: |
      A cluster of Tendermint MintNet nodes running a distributed blockchain application.
    origin: http://github.com/tendermint/mintnet/
    iconUrl: http://bitcoinist.net/wp-content/uploads/2016/02/Tendermint-logo-300x300.png
    itemType: template
    item:
      services:
      - type: tendermint-mintnet-cluster
        id: tendermint-deployment
        name: "Tendermint MintNet Cluster"
        brooklyn.parameters:
        - name: tendermint.node.count
          description: |
            The number of Tendermint nodes to create in the cluster.
          type: integer
          default: 4
        - name: tendermint.application.name
          description: |
            The name of the Tendermint application being deployed.
          type: string
          default: "example"
          constraints:
          - required
        - name: tendermint.application.archive
          description: |
            The tgz archive containing files for the tendermint containers. This can
            also be a URL pointing to the archive file. This will be unpacked before
            use. This must contain sub-directories named "app", "core" and "data"
            with the "init.sh" and "genesis.json" files required for the application.
          type: string
          default: "file:///example/application.tar.gz"
          constraints:
          - required
        brooklyn.config:
          tendermint.node.count: 4
          tendermint.chain.id: "test"

  - id: tendermint-mintnet-cluster
    name: "Tendermint MintNet Cluster"
    description: |
      Tendermint cluster on application nodes on Docker hosts.
    item:
      type: org.apache.brooklyn.entity.stock.BasicApplication
      brooklyn.enrichers:
      - type: org.apache.brooklyn.enricher.stock.Propagator
        brooklyn.config:
          uniqueTag: main-uri-propagator
          producer: $brooklyn:entity("tendermint-cluster")
          propagating:
          - $brooklyn:sensor("main.uri")
      brooklyn.children:
      - type: cluster
        id: tendermint-cluster
        name: "Tendermint Cluster"
        initialSize: $brooklyn:config("tendermint.node.count")
        memberSpec:
          $brooklyn:entitySpec:
            type: tendermint-node
            name: "Tendermint Node"
        brooklyn.enrichers:
        - type: org.apache.brooklyn.enricher.stock.Aggregator
          brooklyn.config:
            uniqueTag: tendermint-endpoint-aggregator
            enricher.sourceSensor: $brooklyn:sensor("tendermint.machine.endpoint")
            enricher.targetSensor: $brooklyn:sensor("tendermint.endpoint.list")
            enricher.aggregating.fromMembers: true
        - type: org.apache.brooklyn.enricher.stock.Joiner
          brooklyn.config:
            uniqueTag: tendermint-seeds-joiner
            enricher.sourceSensor: $brooklyn:sensor("tendermint.endpoint.list")
            enricher.targetSensor: $brooklyn:sensor("tendermint.seeds")
            enricher.joiner.separator: ","
            enricher.joiner.quote: false
        - type: org.apache.brooklyn.enricher.stock.Joiner
          brooklyn.config:
            uniqueTag: tendermint-endpoint
            enricher.sourceSensor: $brooklyn:sensor("tendermint.endpoint.list")
            enricher.targetSensor: $brooklyn:sensor("tendermint.endpoint")
            enricher.joiner.minimum: 1
            enricher.joiner.maximum: 1
            enricher.joiner.quote: false
        - type: org.apache.brooklyn.enricher.stock.Transformer
          brooklyn.config:
            uniqueTag: tendermint-main-uri-generator
            enricher.sourceSensor: $brooklyn:sensor("tendermint.endpoint")
            enricher.targetSensor: $brooklyn:sensor("main.uri")
            enricher.targetValue:
              $brooklyn:formatString:
              - "http://%s/blockchain"
              - $brooklyn:attributeWhenReady("tendermint.endpoint")
        - type: org.apache.brooklyn.enricher.stock.Aggregator
          brooklyn.config:
            uniqueTag: tendermint-pubkey-aggregator
            enricher.sourceSensor: $brooklyn:sensor("tendermint.machine.pubkey.json")
            enricher.targetSensor: $brooklyn:sensor("tendermint.pubkey.list")
            enricher.aggregating.fromMembers: true
        - type: org.apache.brooklyn.enricher.stock.Joiner
          brooklyn.config:
            uniqueTag: tendermint-pubkey-joiner
            enricher.sourceSensor: $brooklyn:sensor("tendermint.pubkey.list")
            enricher.targetSensor: $brooklyn:sensor("tendermint.pubkey.json")
            enricher.joiner.separator: ","
            enricher.joiner.quote: false
        - type: org.apache.brooklyn.enricher.stock.Transformer
          brooklyn.config:
            uniqueTag: tendermint-genesis-generator
            enricher.sourceSensor: $brooklyn:sensor("tendermint.pubkey.json")
            enricher.targetSensor: $brooklyn:sensor("tendermint.genesis.json")
            enricher.targetValue:
              $brooklyn:formatString:
              - "{\"genesis_time\":\"2016-01-01T00:00:00.000Z\",\"chain_id\":\"chain-%s\",\"validators\":[ %s ],\"app_hash\":\"\"}"
              - $brooklyn:config("tendermint.chainId")
              - $brooklyn:attributeWhenReady("tendermint.machine.pubkey.data")

  - id: tendermint-node
    name: "Tendermint Node"
    description: |
      Tendermint Node running the common, data, app and core containers.
    item:
      type: org.apache.brooklyn.entity.stock.BasicStartable
      brooklyn.config:
        docker.useSsh: false
        run.dir: /tmp/tendermint
        docker.container.strategies:
        - $brooklyn:object:
            type: clocker.docker.location.strategy.basic.GroupPlacementStrategy
            brooklyn.config:
              docker.constraint.exclusive: true
      brooklyn.enrichers:
      - type: org.apache.brooklyn.enricher.stock.Propagator
        brooklyn.config:
          uniqueTag: tendermint-machine-propagator
          producer: $brooklyn:child("tendermint-common")
          propagating:
          - $brooklyn:sensor("tendermint.machine.endpoint")
          - $brooklyn:sensor("tendermint.machine.pubkey")
          - $brooklyn:sensor("tendermint.machine.pubkey.json")
      brooklyn.children:
      - type: docker:tendermint/tmbase
        id: tendermint-common
        brooklyn.config:
          docker.container.interactive: true
          docker.container.environment:
            TMREPO: "github.com/tendermint/tendermint"
          docker.container.volumes.export: "/data"
          files.runtime:
            $brooklyn:config("tendermint.application.archive"): "/data/tendermint/application.tgz"
          pre.launch.command: |
            echo "[BROOKLYN] Setup Tendermint directory for this host"
            cd /data/tendermint
            tar zxf application.tgz
          post.launch.command: |
            echo "[BROOKLYN] Check Tendermint validator"
            while [ ! $(which tendermint) ] ; do sleep 10 ; done
            tendermint show_validator --log_level=error
            mv ~/.tendermint/priv_validator.json /data/tendermint/core/
        brooklyn.initializers:
        - type: org.apache.brooklyn.core.sensor.StaticSensor
          brooklyn.config:
            name: tendermint.machine.endpoint
            targetType: string
            static.value:
              $brooklyn:formatString:
              - "%s:%d"
              - $brooklyn:attributeWhenReady("host.address")
              - 46656
        - type: org.apache.brooklyn.core.sensor.ssh.SshCommandSensor
          brooklyn.config:
            name: tendermint.machine.pubkey
            targetType: string
            trim: true
            command: |
              tendermint show_validator --log_level=error
        brrooklyn.enrichers:
          - type: org.apache.brooklyn.enricher.stock.Transformer
            brooklyn.config:
              uniqueTag: tendermint-pubkey-generator
              enricher.sourceSensor: $brooklyn:sensor("tendermint.machine.pubkey")
              enricher.targetSensor: $brooklyn:sensor("tendermint.machine.pubkey.json")
              enricher.targetValue:
                $brooklyn:formatString:
                - "{\"pub_key\":[1,\"%s\"],\"amount\":1,\"name\":\"%s\"}"
                - $brooklyn:attributeWhenReady("tendermint.machine.pubkey")
                - $brooklyn:attributeWhenReady("host.address")
      - type: docker:tendermint/tmbase
        id: tendermint-data
        brooklyn.config:
          docker.image.entrypoint: "/data/tendermint/data/init.sh"
          docker.container.environment:
            TMREPO: "github.com/tendermint/tendermint"
            TMNAME: $brooklyn:config("tendermint.application.name")
          docker.container.volumes.import:
          - $brooklyn:sibling("tendermint-common").attributeWhenReady("docker.container.id")
          checkRunning.command: |
            test -S "/data/tendermint/data/data.sock"
          provision.latch:
            $brooklyn:sibling("tendermint-common").attributeWhenReady("service.isUp")
      - type: docker:tendermint/tmbase
        id: tendermint-app
        brooklyn.config:
          docker.image.entrypoint: "/data/tendermint/app/init.sh"
          docker.container.directPorts:
          - 46658
          docker.container.environment:
            TMREPO: "github.com/tendermint/tendermint"
            TMNAME: $brooklyn:config("tendermint.application.name")
            GENESIS_JSON: $brooklyn:component("tendermint-cluster").$brooklyn:attributeWhenReady("tendermint.genesis.json")
          docker.container.volumes.import:
          - $brooklyn:sibling("tendermint-common").attributeWhenReady("docker.container.id")
          post.launch.command: |
            echo "[BROOKLYN] Create genesis JSON file"
            echo "${GENESIS_JSON}" > /data/tendermint/core/genesis.json
          checkRunning.command: |
            which ${TMNAME}
          provision.latch:
            $brooklyn:sibling("tendermint-data").attributeWhenReady("service.isUp")
      - type: docker:tendermint/tmbase
        id: tendermint-core
        brooklyn.config:
          docker.image.entrypoint: "/data/tendermint/core/init.sh"
          docker.container.links:
            $brooklyn:formatString("%s_tmapp", $brooklyn:config("tendermint.application.name")):
              $brooklyn:sibling("tendermint-app")
          docker.container.directPorts:
          - 46656
          - 46657
          docker.container.environment:
            TMREPO: "github.com/tendermint/tendermint"
            TMNAME: $brooklyn:config("tendermint.application.name")
            TMSEEDS: $brooklyn:component("tendermint-cluster").attributeWhenReady("tendermint.seeds")
            TMROOT: "/data/tendermint/core"
            GODEBUG: "netdns=cgo"
            PROXYAPP:
              $brooklyn:formatString:
              - "tcp://%s_tmapp:46658"
              - $brooklyn:config("tendermint.application.name")
          docker.container.volumes.import:
          - $brooklyn:sibling("tendermint-common").attributeWhenReady("docker.container.id")
          pre.launch.command: |
            echo "[BROOKLYN] Check Tendermint validator"
            while [ ! $(which tendermint) ] ; do sleep 10 ; done
            tendermint show_validator --log_level=error
          provision.latch:
            $brooklyn:sibling("tendermint-app").attributeWhenReady("service.isUp")
